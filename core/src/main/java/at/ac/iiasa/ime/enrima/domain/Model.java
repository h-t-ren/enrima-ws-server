package at.ac.iiasa.ime.enrima.domain;
// Generated Nov 29, 2011 9:34:07 AM by Hibernate Tools 3.2.2.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.SEQUENCE;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Model generated by hbm2java
 */
@Entity
@Table(name="model"
)
public class Model  implements java.io.Serializable {


     private Integer idModel;
     private ModelType modelType;
     private Usr usrByModifiedBy;
     private Model model;
     private Usr usrByCreatedBy;
     private String majorLabel;
     private Date creationDate;
     private Date modificationDate;
     private String minorLabel;
     private String name;
     private String description;
     private Set<Model> models = new HashSet<Model>(0);
     private Set<SetSpec> setSpecs = new HashSet<SetSpec>(0);
     private Set<ModelIdentifiers> modelIdentifierses = new HashSet<ModelIdentifiers>(0);
     private Set<EntitySpec> entitySpecs = new HashSet<EntitySpec>(0);
     private Set<Comments> commentses = new HashSet<Comments>(0);
     private Set<ModelInstance> modelInstances = new HashSet<ModelInstance>(0);
     private Set<ModelDataUpdate> modelDataUpdates = new HashSet<ModelDataUpdate>(0);
     private Set<IteratorAtom> iteratorAtoms = new HashSet<IteratorAtom>(0);
     private Set<IteratorContainer> iteratorContainers = new HashSet<IteratorContainer>(0);
     private Set<ModelSpecRev> modelSpecRevs = new HashSet<ModelSpecRev>(0);
     private Set<Submodel> submodels = new HashSet<Submodel>(0);

    public Model() {
    }

	
    public Model(String majorLabel, Date creationDate, Date modificationDate) {
        this.majorLabel = majorLabel;
        this.creationDate = creationDate;
        this.modificationDate = modificationDate;
    }
    public Model(ModelType modelType, Usr usrByModifiedBy, Model model, Usr usrByCreatedBy, String majorLabel, Date creationDate, Date modificationDate, String minorLabel, String name, String description, Set<Model> models, Set<SetSpec> setSpecs, Set<ModelIdentifiers> modelIdentifierses, Set<EntitySpec> entitySpecs, Set<Comments> commentses, Set<ModelInstance> modelInstances, Set<ModelDataUpdate> modelDataUpdates, Set<IteratorAtom> iteratorAtoms, Set<IteratorContainer> iteratorContainers, Set<ModelSpecRev> modelSpecRevs, Set<Submodel> submodels) {
       this.modelType = modelType;
       this.usrByModifiedBy = usrByModifiedBy;
       this.model = model;
       this.usrByCreatedBy = usrByCreatedBy;
       this.majorLabel = majorLabel;
       this.creationDate = creationDate;
       this.modificationDate = modificationDate;
       this.minorLabel = minorLabel;
       this.name = name;
       this.description = description;
       this.models = models;
       this.setSpecs = setSpecs;
       this.modelIdentifierses = modelIdentifierses;
       this.entitySpecs = entitySpecs;
       this.commentses = commentses;
       this.modelInstances = modelInstances;
       this.modelDataUpdates = modelDataUpdates;
       this.iteratorAtoms = iteratorAtoms;
       this.iteratorContainers = iteratorContainers;
       this.modelSpecRevs = modelSpecRevs;
       this.submodels = submodels;
    }
   
     @SequenceGenerator(name="generator", sequenceName="SEQ__JPA_MODEL__ID_JPA_MODEL")@Id @GeneratedValue(strategy=SEQUENCE, generator="generator")
    
    @Column(name="id_model", unique=true, nullable=false)
    public Integer getIdModel() {
        return this.idModel;
    }
    
    public void setIdModel(Integer idModel) {
        this.idModel = idModel;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_model_type")
    public ModelType getModelType() {
        return this.modelType;
    }
    
    public void setModelType(ModelType modelType) {
        this.modelType = modelType;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="modified_by")
    public Usr getUsrByModifiedBy() {
        return this.usrByModifiedBy;
    }
    
    public void setUsrByModifiedBy(Usr usrByModifiedBy) {
        this.usrByModifiedBy = usrByModifiedBy;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_model_template")
    public Model getModel() {
        return this.model;
    }
    
    public void setModel(Model model) {
        this.model = model;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="created_by")
    public Usr getUsrByCreatedBy() {
        return this.usrByCreatedBy;
    }
    
    public void setUsrByCreatedBy(Usr usrByCreatedBy) {
        this.usrByCreatedBy = usrByCreatedBy;
    }
    
    @Column(name="major_label", nullable=false, length=12)
    public String getMajorLabel() {
        return this.majorLabel;
    }
    
    public void setMajorLabel(String majorLabel) {
        this.majorLabel = majorLabel;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="creation_date", nullable=false, length=29)
    public Date getCreationDate() {
        return this.creationDate;
    }
    
    public void setCreationDate(Date creationDate) {
        this.creationDate = creationDate;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="modification_date", nullable=false, length=29)
    public Date getModificationDate() {
        return this.modificationDate;
    }
    
    public void setModificationDate(Date modificationDate) {
        this.modificationDate = modificationDate;
    }
    
    @Column(name="minor_label", length=30)
    public String getMinorLabel() {
        return this.minorLabel;
    }
    
    public void setMinorLabel(String minorLabel) {
        this.minorLabel = minorLabel;
    }
    
    @Column(name="name", length=50)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    
    @Column(name="description", length=1000)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="model")
    public Set<Model> getModels() {
        return this.models;
    }
    
    public void setModels(Set<Model> models) {
        this.models = models;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="model")
    public Set<SetSpec> getSetSpecs() {
        return this.setSpecs;
    }
    
    public void setSetSpecs(Set<SetSpec> setSpecs) {
        this.setSpecs = setSpecs;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="model")
    public Set<ModelIdentifiers> getModelIdentifierses() {
        return this.modelIdentifierses;
    }
    
    public void setModelIdentifierses(Set<ModelIdentifiers> modelIdentifierses) {
        this.modelIdentifierses = modelIdentifierses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="model")
    public Set<EntitySpec> getEntitySpecs() {
        return this.entitySpecs;
    }
    
    public void setEntitySpecs(Set<EntitySpec> entitySpecs) {
        this.entitySpecs = entitySpecs;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="model")
    public Set<Comments> getCommentses() {
        return this.commentses;
    }
    
    public void setCommentses(Set<Comments> commentses) {
        this.commentses = commentses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="model")
    public Set<ModelInstance> getModelInstances() {
        return this.modelInstances;
    }
    
    public void setModelInstances(Set<ModelInstance> modelInstances) {
        this.modelInstances = modelInstances;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="model")
    public Set<ModelDataUpdate> getModelDataUpdates() {
        return this.modelDataUpdates;
    }
    
    public void setModelDataUpdates(Set<ModelDataUpdate> modelDataUpdates) {
        this.modelDataUpdates = modelDataUpdates;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="model")
    public Set<IteratorAtom> getIteratorAtoms() {
        return this.iteratorAtoms;
    }
    
    public void setIteratorAtoms(Set<IteratorAtom> iteratorAtoms) {
        this.iteratorAtoms = iteratorAtoms;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="model")
    public Set<IteratorContainer> getIteratorContainers() {
        return this.iteratorContainers;
    }
    
    public void setIteratorContainers(Set<IteratorContainer> iteratorContainers) {
        this.iteratorContainers = iteratorContainers;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="model")
    public Set<ModelSpecRev> getModelSpecRevs() {
        return this.modelSpecRevs;
    }
    
    public void setModelSpecRevs(Set<ModelSpecRev> modelSpecRevs) {
        this.modelSpecRevs = modelSpecRevs;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="model")
    public Set<Submodel> getSubmodels() {
        return this.submodels;
    }
    
    public void setSubmodels(Set<Submodel> submodels) {
        this.submodels = submodels;
    }




}


