package at.ac.iiasa.ime.enrima.domain;
// Generated Nov 29, 2011 9:34:07 AM by Hibernate Tools 3.2.2.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.SEQUENCE;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Sn generated by hbm2java
 */
@Entity
@Table(name="sn"
)
public class Sn  implements java.io.Serializable {


     private String idSn;
     private Usr usr;
     private Date started;
     private Date touched;
     private Date finished;
     private Set<LblLg> lblLgs = new HashSet<LblLg>(0);
     private Set<LblLclLg> lblLclLgs = new HashSet<LblLclLg>(0);
     private Set<Lbl> lbls = new HashSet<Lbl>(0);
     private Set<AcsLg> acsLgs = new HashSet<AcsLg>(0);
     private Set<Acs> acses = new HashSet<Acs>(0);
     private Set<UsrGrpLg> usrGrpLgsForSn = new HashSet<UsrGrpLg>(0);
     private Set<LblLcl> lblLcls = new HashSet<LblLcl>(0);
     private Set<UsrGrp> usrGrpsForSn = new HashSet<UsrGrp>(0);
     private Set<UsrGrpLg> usrGrpLgsForLckSts = new HashSet<UsrGrpLg>(0);
     private Set<UsrLg> usrLgsForSn = new HashSet<UsrLg>(0);
     private Set<Usr> usrsForSn = new HashSet<Usr>(0);
     private Set<AthntctnUsr> athntctnUsrs = new HashSet<AthntctnUsr>(0);
     private Set<UsrGrpGrp> usrGrpGrps = new HashSet<UsrGrpGrp>(0);
     private Set<UsrGrpGrpLg> usrGrpGrpLgs = new HashSet<UsrGrpGrpLg>(0);
     private Set<Usr> usrsForLckSts = new HashSet<Usr>(0);
     private Set<UsrLg> usrLgsForLckSts = new HashSet<UsrLg>(0);
     private Set<UsrGrp> usrGrpsForLckSts = new HashSet<UsrGrp>(0);
     private Set<MsgLg> msgLgsForLckSts = new HashSet<MsgLg>(0);
     private Set<Msg> msgsForLckSts = new HashSet<Msg>(0);
     private Set<MsgLcl> msgLcls = new HashSet<MsgLcl>(0);
     private Set<Msg> msgsForSn = new HashSet<Msg>(0);
     private Set<MsgLclLg> msgLclLgs = new HashSet<MsgLclLg>(0);
     private Set<MsgLg> msgLgsForSn = new HashSet<MsgLg>(0);
     private Set<ModelDataUpdate> modelDataUpdatesForSn = new HashSet<ModelDataUpdate>(0);
     private Set<ModelSpecRev> modelSpecRevsForSn = new HashSet<ModelSpecRev>(0);
     private Set<ModelDataUpdate> modelDataUpdatesForLckSts = new HashSet<ModelDataUpdate>(0);
     private Set<ModelSpecRev> modelSpecRevsForLckSts = new HashSet<ModelSpecRev>(0);

    public Sn() {
    }

	
    public Sn(Date started) {
        this.started = started;
    }
    public Sn(Usr usr, Date started, Date touched, Date finished, Set<LblLg> lblLgs, Set<LblLclLg> lblLclLgs, Set<Lbl> lbls, Set<AcsLg> acsLgs, Set<Acs> acses, Set<UsrGrpLg> usrGrpLgsForSn, Set<LblLcl> lblLcls, Set<UsrGrp> usrGrpsForSn, Set<UsrGrpLg> usrGrpLgsForLckSts, Set<UsrLg> usrLgsForSn, Set<Usr> usrsForSn, Set<AthntctnUsr> athntctnUsrs, Set<UsrGrpGrp> usrGrpGrps, Set<UsrGrpGrpLg> usrGrpGrpLgs, Set<Usr> usrsForLckSts, Set<UsrLg> usrLgsForLckSts, Set<UsrGrp> usrGrpsForLckSts, Set<MsgLg> msgLgsForLckSts, Set<Msg> msgsForLckSts, Set<MsgLcl> msgLcls, Set<Msg> msgsForSn, Set<MsgLclLg> msgLclLgs, Set<MsgLg> msgLgsForSn, Set<ModelDataUpdate> modelDataUpdatesForSn, Set<ModelSpecRev> modelSpecRevsForSn, Set<ModelDataUpdate> modelDataUpdatesForLckSts, Set<ModelSpecRev> modelSpecRevsForLckSts) {
       this.usr = usr;
       this.started = started;
       this.touched = touched;
       this.finished = finished;
       this.lblLgs = lblLgs;
       this.lblLclLgs = lblLclLgs;
       this.lbls = lbls;
       this.acsLgs = acsLgs;
       this.acses = acses;
       this.usrGrpLgsForSn = usrGrpLgsForSn;
       this.lblLcls = lblLcls;
       this.usrGrpsForSn = usrGrpsForSn;
       this.usrGrpLgsForLckSts = usrGrpLgsForLckSts;
       this.usrLgsForSn = usrLgsForSn;
       this.usrsForSn = usrsForSn;
       this.athntctnUsrs = athntctnUsrs;
       this.usrGrpGrps = usrGrpGrps;
       this.usrGrpGrpLgs = usrGrpGrpLgs;
       this.usrsForLckSts = usrsForLckSts;
       this.usrLgsForLckSts = usrLgsForLckSts;
       this.usrGrpsForLckSts = usrGrpsForLckSts;
       this.msgLgsForLckSts = msgLgsForLckSts;
       this.msgsForLckSts = msgsForLckSts;
       this.msgLcls = msgLcls;
       this.msgsForSn = msgsForSn;
       this.msgLclLgs = msgLclLgs;
       this.msgLgsForSn = msgLgsForSn;
       this.modelDataUpdatesForSn = modelDataUpdatesForSn;
       this.modelSpecRevsForSn = modelSpecRevsForSn;
       this.modelDataUpdatesForLckSts = modelDataUpdatesForLckSts;
       this.modelSpecRevsForLckSts = modelSpecRevsForLckSts;
    }
   
     @SequenceGenerator(name="generator", sequenceName="seq__sn__id_sn")@Id @GeneratedValue(strategy=SEQUENCE, generator="generator")
    
    @Column(name="id_sn", unique=true, nullable=false, length=256)
    public String getIdSn() {
        return this.idSn;
    }
    
    public void setIdSn(String idSn) {
        this.idSn = idSn;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="usr")
    public Usr getUsr() {
        return this.usr;
    }
    
    public void setUsr(Usr usr) {
        this.usr = usr;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="started", nullable=false, length=29)
    public Date getStarted() {
        return this.started;
    }
    
    public void setStarted(Date started) {
        this.started = started;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="touched", length=29)
    public Date getTouched() {
        return this.touched;
    }
    
    public void setTouched(Date touched) {
        this.touched = touched;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="finished", length=29)
    public Date getFinished() {
        return this.finished;
    }
    
    public void setFinished(Date finished) {
        this.finished = finished;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sn")
    public Set<LblLg> getLblLgs() {
        return this.lblLgs;
    }
    
    public void setLblLgs(Set<LblLg> lblLgs) {
        this.lblLgs = lblLgs;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sn")
    public Set<LblLclLg> getLblLclLgs() {
        return this.lblLclLgs;
    }
    
    public void setLblLclLgs(Set<LblLclLg> lblLclLgs) {
        this.lblLclLgs = lblLclLgs;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sn")
    public Set<Lbl> getLbls() {
        return this.lbls;
    }
    
    public void setLbls(Set<Lbl> lbls) {
        this.lbls = lbls;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sn")
    public Set<AcsLg> getAcsLgs() {
        return this.acsLgs;
    }
    
    public void setAcsLgs(Set<AcsLg> acsLgs) {
        this.acsLgs = acsLgs;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sn")
    public Set<Acs> getAcses() {
        return this.acses;
    }
    
    public void setAcses(Set<Acs> acses) {
        this.acses = acses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="snBySn")
    public Set<UsrGrpLg> getUsrGrpLgsForSn() {
        return this.usrGrpLgsForSn;
    }
    
    public void setUsrGrpLgsForSn(Set<UsrGrpLg> usrGrpLgsForSn) {
        this.usrGrpLgsForSn = usrGrpLgsForSn;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sn")
    public Set<LblLcl> getLblLcls() {
        return this.lblLcls;
    }
    
    public void setLblLcls(Set<LblLcl> lblLcls) {
        this.lblLcls = lblLcls;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="snBySn")
    public Set<UsrGrp> getUsrGrpsForSn() {
        return this.usrGrpsForSn;
    }
    
    public void setUsrGrpsForSn(Set<UsrGrp> usrGrpsForSn) {
        this.usrGrpsForSn = usrGrpsForSn;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="snByLckSts")
    public Set<UsrGrpLg> getUsrGrpLgsForLckSts() {
        return this.usrGrpLgsForLckSts;
    }
    
    public void setUsrGrpLgsForLckSts(Set<UsrGrpLg> usrGrpLgsForLckSts) {
        this.usrGrpLgsForLckSts = usrGrpLgsForLckSts;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="snBySn")
    public Set<UsrLg> getUsrLgsForSn() {
        return this.usrLgsForSn;
    }
    
    public void setUsrLgsForSn(Set<UsrLg> usrLgsForSn) {
        this.usrLgsForSn = usrLgsForSn;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="snBySn")
    public Set<Usr> getUsrsForSn() {
        return this.usrsForSn;
    }
    
    public void setUsrsForSn(Set<Usr> usrsForSn) {
        this.usrsForSn = usrsForSn;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sn")
    public Set<AthntctnUsr> getAthntctnUsrs() {
        return this.athntctnUsrs;
    }
    
    public void setAthntctnUsrs(Set<AthntctnUsr> athntctnUsrs) {
        this.athntctnUsrs = athntctnUsrs;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sn")
    public Set<UsrGrpGrp> getUsrGrpGrps() {
        return this.usrGrpGrps;
    }
    
    public void setUsrGrpGrps(Set<UsrGrpGrp> usrGrpGrps) {
        this.usrGrpGrps = usrGrpGrps;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sn")
    public Set<UsrGrpGrpLg> getUsrGrpGrpLgs() {
        return this.usrGrpGrpLgs;
    }
    
    public void setUsrGrpGrpLgs(Set<UsrGrpGrpLg> usrGrpGrpLgs) {
        this.usrGrpGrpLgs = usrGrpGrpLgs;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="snByLckSts")
    public Set<Usr> getUsrsForLckSts() {
        return this.usrsForLckSts;
    }
    
    public void setUsrsForLckSts(Set<Usr> usrsForLckSts) {
        this.usrsForLckSts = usrsForLckSts;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="snByLckSts")
    public Set<UsrLg> getUsrLgsForLckSts() {
        return this.usrLgsForLckSts;
    }
    
    public void setUsrLgsForLckSts(Set<UsrLg> usrLgsForLckSts) {
        this.usrLgsForLckSts = usrLgsForLckSts;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="snByLckSts")
    public Set<UsrGrp> getUsrGrpsForLckSts() {
        return this.usrGrpsForLckSts;
    }
    
    public void setUsrGrpsForLckSts(Set<UsrGrp> usrGrpsForLckSts) {
        this.usrGrpsForLckSts = usrGrpsForLckSts;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="snByLckSts")
    public Set<MsgLg> getMsgLgsForLckSts() {
        return this.msgLgsForLckSts;
    }
    
    public void setMsgLgsForLckSts(Set<MsgLg> msgLgsForLckSts) {
        this.msgLgsForLckSts = msgLgsForLckSts;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="snByLckSts")
    public Set<Msg> getMsgsForLckSts() {
        return this.msgsForLckSts;
    }
    
    public void setMsgsForLckSts(Set<Msg> msgsForLckSts) {
        this.msgsForLckSts = msgsForLckSts;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sn")
    public Set<MsgLcl> getMsgLcls() {
        return this.msgLcls;
    }
    
    public void setMsgLcls(Set<MsgLcl> msgLcls) {
        this.msgLcls = msgLcls;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="snBySn")
    public Set<Msg> getMsgsForSn() {
        return this.msgsForSn;
    }
    
    public void setMsgsForSn(Set<Msg> msgsForSn) {
        this.msgsForSn = msgsForSn;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sn")
    public Set<MsgLclLg> getMsgLclLgs() {
        return this.msgLclLgs;
    }
    
    public void setMsgLclLgs(Set<MsgLclLg> msgLclLgs) {
        this.msgLclLgs = msgLclLgs;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="snBySn")
    public Set<MsgLg> getMsgLgsForSn() {
        return this.msgLgsForSn;
    }
    
    public void setMsgLgsForSn(Set<MsgLg> msgLgsForSn) {
        this.msgLgsForSn = msgLgsForSn;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="snBySn")
    public Set<ModelDataUpdate> getModelDataUpdatesForSn() {
        return this.modelDataUpdatesForSn;
    }
    
    public void setModelDataUpdatesForSn(Set<ModelDataUpdate> modelDataUpdatesForSn) {
        this.modelDataUpdatesForSn = modelDataUpdatesForSn;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="snBySn")
    public Set<ModelSpecRev> getModelSpecRevsForSn() {
        return this.modelSpecRevsForSn;
    }
    
    public void setModelSpecRevsForSn(Set<ModelSpecRev> modelSpecRevsForSn) {
        this.modelSpecRevsForSn = modelSpecRevsForSn;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="snByLckSts")
    public Set<ModelDataUpdate> getModelDataUpdatesForLckSts() {
        return this.modelDataUpdatesForLckSts;
    }
    
    public void setModelDataUpdatesForLckSts(Set<ModelDataUpdate> modelDataUpdatesForLckSts) {
        this.modelDataUpdatesForLckSts = modelDataUpdatesForLckSts;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="snByLckSts")
    public Set<ModelSpecRev> getModelSpecRevsForLckSts() {
        return this.modelSpecRevsForLckSts;
    }
    
    public void setModelSpecRevsForLckSts(Set<ModelSpecRev> modelSpecRevsForLckSts) {
        this.modelSpecRevsForLckSts = modelSpecRevsForLckSts;
    }




}


