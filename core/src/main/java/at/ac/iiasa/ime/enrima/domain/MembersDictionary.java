package at.ac.iiasa.ime.enrima.domain;
// Generated Nov 29, 2011 9:34:07 AM by Hibernate Tools 3.2.2.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.SEQUENCE;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * MembersDictionary generated by hbm2java
 */
@Entity
@Table(name="members_dictionary"
    , uniqueConstraints = @UniqueConstraint(columnNames={"id_set", "code"}) 
)
public class MembersDictionary  implements java.io.Serializable {


     private Integer idMember;
     private SetData setData;
     private String code;
     private String description;
     private Set<SetMember> setMembers = new HashSet<SetMember>(0);
     private Set<TupleElement> tupleElements = new HashSet<TupleElement>(0);

    public MembersDictionary() {
    }

	
    public MembersDictionary(SetData setData, String code) {
        this.setData = setData;
        this.code = code;
    }
    public MembersDictionary(SetData setData, String code, String description, Set<SetMember> setMembers, Set<TupleElement> tupleElements) {
       this.setData = setData;
       this.code = code;
       this.description = description;
       this.setMembers = setMembers;
       this.tupleElements = tupleElements;
    }
   
     @SequenceGenerator(name="generator", sequenceName="SEQ__JPA_MEMBERS_DICTIONARY__ID_JPA_MEMBERS_DICTIONARY")@Id @GeneratedValue(strategy=SEQUENCE, generator="generator")
    
    @Column(name="id_member", unique=true, nullable=false)
    public Integer getIdMember() {
        return this.idMember;
    }
    
    public void setIdMember(Integer idMember) {
        this.idMember = idMember;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_set", nullable=false)
    public SetData getSetData() {
        return this.setData;
    }
    
    public void setSetData(SetData setData) {
        this.setData = setData;
    }
    
    @Column(name="code", nullable=false, length=8)
    public String getCode() {
        return this.code;
    }
    
    public void setCode(String code) {
        this.code = code;
    }
    
    @Column(name="description", length=50)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="membersDictionary")
    public Set<SetMember> getSetMembers() {
        return this.setMembers;
    }
    
    public void setSetMembers(Set<SetMember> setMembers) {
        this.setMembers = setMembers;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="membersDictionary")
    public Set<TupleElement> getTupleElements() {
        return this.tupleElements;
    }
    
    public void setTupleElements(Set<TupleElement> tupleElements) {
        this.tupleElements = tupleElements;
    }




}


