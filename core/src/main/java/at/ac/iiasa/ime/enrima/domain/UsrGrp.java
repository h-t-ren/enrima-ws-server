package at.ac.iiasa.ime.enrima.domain;
// Generated Nov 29, 2011 9:34:07 AM by Hibernate Tools 3.2.2.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.SEQUENCE;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * UsrGrp generated by hbm2java
 */
@Entity
@Table(name="usr_grp"
    , uniqueConstraints = @UniqueConstraint(columnNames="obj") 
)
public class UsrGrp  implements java.io.Serializable {


     private Short idUsrGrp;
     private Sn snByLckSts;
     private DbSts dbSts;
     private Lbl lbl;
     private Usr usr;
     private Sn snBySn;
     private Integer obj;
     private Set<Usr> usrs = new HashSet<Usr>(0);
     private Set<UsrGrpLg> usrGrpLgs = new HashSet<UsrGrpLg>(0);
     private Set<Acs> acses = new HashSet<Acs>(0);
     private Set<AcsLg> acsLgs = new HashSet<AcsLg>(0);
     private Set<UsrGrpGrp> usrGrpGrpsForIdUsrGrpMbr = new HashSet<UsrGrpGrp>(0);
     private Set<UsrGrpGrp> usrGrpGrpsForIdUsrGrp = new HashSet<UsrGrpGrp>(0);

    public UsrGrp() {
    }

	
    public UsrGrp(DbSts dbSts, Lbl lbl, Sn snBySn) {
        this.dbSts = dbSts;
        this.lbl = lbl;
        this.snBySn = snBySn;
    }
    public UsrGrp(Sn snByLckSts, DbSts dbSts, Lbl lbl, Usr usr, Sn snBySn, Integer obj, Set<Usr> usrs, Set<UsrGrpLg> usrGrpLgs, Set<Acs> acses, Set<AcsLg> acsLgs, Set<UsrGrpGrp> usrGrpGrpsForIdUsrGrpMbr, Set<UsrGrpGrp> usrGrpGrpsForIdUsrGrp) {
       this.snByLckSts = snByLckSts;
       this.dbSts = dbSts;
       this.lbl = lbl;
       this.usr = usr;
       this.snBySn = snBySn;
       this.obj = obj;
       this.usrs = usrs;
       this.usrGrpLgs = usrGrpLgs;
       this.acses = acses;
       this.acsLgs = acsLgs;
       this.usrGrpGrpsForIdUsrGrpMbr = usrGrpGrpsForIdUsrGrpMbr;
       this.usrGrpGrpsForIdUsrGrp = usrGrpGrpsForIdUsrGrp;
    }
   
     @SequenceGenerator(name="generator", sequenceName="seq__usr_grp__id_usr_grp")@Id @GeneratedValue(strategy=SEQUENCE, generator="generator")
    
    @Column(name="id_usr_grp", unique=true, nullable=false)
    public Short getIdUsrGrp() {
        return this.idUsrGrp;
    }
    
    public void setIdUsrGrp(Short idUsrGrp) {
        this.idUsrGrp = idUsrGrp;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="lck_sts")
    public Sn getSnByLckSts() {
        return this.snByLckSts;
    }
    
    public void setSnByLckSts(Sn snByLckSts) {
        this.snByLckSts = snByLckSts;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="db_sts", nullable=false)
    public DbSts getDbSts() {
        return this.dbSts;
    }
    
    public void setDbSts(DbSts dbSts) {
        this.dbSts = dbSts;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="lbl", nullable=false)
    public Lbl getLbl() {
        return this.lbl;
    }
    
    public void setLbl(Lbl lbl) {
        this.lbl = lbl;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="usr")
    public Usr getUsr() {
        return this.usr;
    }
    
    public void setUsr(Usr usr) {
        this.usr = usr;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="sn", nullable=false)
    public Sn getSnBySn() {
        return this.snBySn;
    }
    
    public void setSnBySn(Sn snBySn) {
        this.snBySn = snBySn;
    }
    
    @Column(name="obj", unique=true)
    public Integer getObj() {
        return this.obj;
    }
    
    public void setObj(Integer obj) {
        this.obj = obj;
    }
@ManyToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY)
    @JoinTable(name="usr_grp_usr", joinColumns = { 
        @JoinColumn(name="id_usr_grp", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="id_usr", nullable=false, updatable=false) })
    public Set<Usr> getUsrs() {
        return this.usrs;
    }
    
    public void setUsrs(Set<Usr> usrs) {
        this.usrs = usrs;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="usrGrp")
    public Set<UsrGrpLg> getUsrGrpLgs() {
        return this.usrGrpLgs;
    }
    
    public void setUsrGrpLgs(Set<UsrGrpLg> usrGrpLgs) {
        this.usrGrpLgs = usrGrpLgs;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="usrGrp")
    public Set<Acs> getAcses() {
        return this.acses;
    }
    
    public void setAcses(Set<Acs> acses) {
        this.acses = acses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="usrGrp")
    public Set<AcsLg> getAcsLgs() {
        return this.acsLgs;
    }
    
    public void setAcsLgs(Set<AcsLg> acsLgs) {
        this.acsLgs = acsLgs;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="usrGrpByIdUsrGrpMbr")
    public Set<UsrGrpGrp> getUsrGrpGrpsForIdUsrGrpMbr() {
        return this.usrGrpGrpsForIdUsrGrpMbr;
    }
    
    public void setUsrGrpGrpsForIdUsrGrpMbr(Set<UsrGrpGrp> usrGrpGrpsForIdUsrGrpMbr) {
        this.usrGrpGrpsForIdUsrGrpMbr = usrGrpGrpsForIdUsrGrpMbr;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="usrGrpByIdUsrGrp")
    public Set<UsrGrpGrp> getUsrGrpGrpsForIdUsrGrp() {
        return this.usrGrpGrpsForIdUsrGrp;
    }
    
    public void setUsrGrpGrpsForIdUsrGrp(Set<UsrGrpGrp> usrGrpGrpsForIdUsrGrp) {
        this.usrGrpGrpsForIdUsrGrp = usrGrpGrpsForIdUsrGrp;
    }




}


