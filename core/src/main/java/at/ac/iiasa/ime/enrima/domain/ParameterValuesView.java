package at.ac.iiasa.ime.enrima.domain;
// Generated Nov 29, 2011 9:34:07 AM by Hibernate Tools 3.2.2.GA


import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * ParameterValuesView generated by hbm2java
 */
@Entity
@Table(name="parameter_values_view"
)
public class ParameterValuesView  implements java.io.Serializable {


     private ParameterValuesViewId id;
     private EntitySpec entitySpec;
     private Tuple tuple;
     private ModelDataUpdate modelDataUpdate;
     private double value;

    public ParameterValuesView() {
    }

    public ParameterValuesView(ParameterValuesViewId id, EntitySpec entitySpec, Tuple tuple, ModelDataUpdate modelDataUpdate, double value) {
       this.id = id;
       this.entitySpec = entitySpec;
       this.tuple = tuple;
       this.modelDataUpdate = modelDataUpdate;
       this.value = value;
    }
   
     @EmbeddedId
    
    @AttributeOverrides( {
        @AttributeOverride(name="idUpdate", column=@Column(name="id_update", nullable=false) ), 
        @AttributeOverride(name="idEntitySpec", column=@Column(name="id_entity_spec", nullable=false) ), 
        @AttributeOverride(name="idTuple", column=@Column(name="id_tuple", nullable=false) ) } )
    public ParameterValuesViewId getId() {
        return this.id;
    }
    
    public void setId(ParameterValuesViewId id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_entity_spec", nullable=false, insertable=false, updatable=false)
    public EntitySpec getEntitySpec() {
        return this.entitySpec;
    }
    
    public void setEntitySpec(EntitySpec entitySpec) {
        this.entitySpec = entitySpec;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_tuple", nullable=false, insertable=false, updatable=false)
    public Tuple getTuple() {
        return this.tuple;
    }
    
    public void setTuple(Tuple tuple) {
        this.tuple = tuple;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_update", nullable=false, insertable=false, updatable=false)
    public ModelDataUpdate getModelDataUpdate() {
        return this.modelDataUpdate;
    }
    
    public void setModelDataUpdate(ModelDataUpdate modelDataUpdate) {
        this.modelDataUpdate = modelDataUpdate;
    }
    
    @Column(name="value", nullable=false, precision=17, scale=17)
    public double getValue() {
        return this.value;
    }
    
    public void setValue(double value) {
        this.value = value;
    }




}


