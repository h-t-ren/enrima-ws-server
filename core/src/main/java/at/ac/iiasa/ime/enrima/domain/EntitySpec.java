package at.ac.iiasa.ime.enrima.domain;
// Generated Nov 29, 2011 9:34:07 AM by Hibernate Tools 3.2.2.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.SEQUENCE;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * EntitySpec generated by hbm2java
 */
@Entity
@Table(name="entity_spec"
    , uniqueConstraints = @UniqueConstraint(columnNames={"id_model", "label"}) 
)
public class EntitySpec  implements java.io.Serializable {


     private Integer idEntitySpec;
     private Model model;
     private String label;
     private char commited;
     private int position;
     private Double constantValue;
     private Character dataFlag;
     private Set<EntitySpecVer> entitySpecVersForIdAssociatedEntity = new HashSet<EntitySpecVer>(0);
     private Set<UploadedEntity> uploadedEntities = new HashSet<UploadedEntity>(0);
     private Set<ActiveEntity> activeEntities = new HashSet<ActiveEntity>(0);
     private Set<EntitySpecVer> entitySpecVersForIdEntitySpec = new HashSet<EntitySpecVer>(0);
     private Set<EntitySpecVer> entitySpecVersForIdUpperBound = new HashSet<EntitySpecVer>(0);
     private Set<EntitySpecVer> entitySpecVersForIdLowerBound = new HashSet<EntitySpecVer>(0);
     private Set<EntityValues> entityValueses = new HashSet<EntityValues>(0);
     private Set<TermEntity> termEntities = new HashSet<TermEntity>(0);
     private Set<Preference> preferences = new HashSet<Preference>(0);
     private Set<ParameterValuesView> parameterValuesViews = new HashSet<ParameterValuesView>(0);

    public EntitySpec() {
    }

	
    public EntitySpec(Model model, String label, char commited, int position) {
        this.model = model;
        this.label = label;
        this.commited = commited;
        this.position = position;
    }
    public EntitySpec(Model model, String label, char commited, int position, Double constantValue, Character dataFlag, Set<EntitySpecVer> entitySpecVersForIdAssociatedEntity, Set<UploadedEntity> uploadedEntities, Set<ActiveEntity> activeEntities, Set<EntitySpecVer> entitySpecVersForIdEntitySpec, Set<EntitySpecVer> entitySpecVersForIdUpperBound, Set<EntitySpecVer> entitySpecVersForIdLowerBound, Set<EntityValues> entityValueses, Set<TermEntity> termEntities, Set<Preference> preferences, Set<ParameterValuesView> parameterValuesViews) {
       this.model = model;
       this.label = label;
       this.commited = commited;
       this.position = position;
       this.constantValue = constantValue;
       this.dataFlag = dataFlag;
       this.entitySpecVersForIdAssociatedEntity = entitySpecVersForIdAssociatedEntity;
       this.uploadedEntities = uploadedEntities;
       this.activeEntities = activeEntities;
       this.entitySpecVersForIdEntitySpec = entitySpecVersForIdEntitySpec;
       this.entitySpecVersForIdUpperBound = entitySpecVersForIdUpperBound;
       this.entitySpecVersForIdLowerBound = entitySpecVersForIdLowerBound;
       this.entityValueses = entityValueses;
       this.termEntities = termEntities;
       this.preferences = preferences;
       this.parameterValuesViews = parameterValuesViews;
    }
   
     @SequenceGenerator(name="generator", sequenceName="SEQ__JPA_ENTITY_SPEC__ID_JPA_ENTITY_SPEC")@Id @GeneratedValue(strategy=SEQUENCE, generator="generator")
    
    @Column(name="id_entity_spec", unique=true, nullable=false)
    public Integer getIdEntitySpec() {
        return this.idEntitySpec;
    }
    
    public void setIdEntitySpec(Integer idEntitySpec) {
        this.idEntitySpec = idEntitySpec;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_model", nullable=false)
    public Model getModel() {
        return this.model;
    }
    
    public void setModel(Model model) {
        this.model = model;
    }
    
    @Column(name="label", nullable=false, length=12)
    public String getLabel() {
        return this.label;
    }
    
    public void setLabel(String label) {
        this.label = label;
    }
    
    @Column(name="commited", nullable=false, length=1)
    public char getCommited() {
        return this.commited;
    }
    
    public void setCommited(char commited) {
        this.commited = commited;
    }
    
    @Column(name="position", nullable=false)
    public int getPosition() {
        return this.position;
    }
    
    public void setPosition(int position) {
        this.position = position;
    }
    
    @Column(name="constant_value", precision=17, scale=17)
    public Double getConstantValue() {
        return this.constantValue;
    }
    
    public void setConstantValue(Double constantValue) {
        this.constantValue = constantValue;
    }
    
    @Column(name="data_flag", length=1)
    public Character getDataFlag() {
        return this.dataFlag;
    }
    
    public void setDataFlag(Character dataFlag) {
        this.dataFlag = dataFlag;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="entitySpecByIdAssociatedEntity")
    public Set<EntitySpecVer> getEntitySpecVersForIdAssociatedEntity() {
        return this.entitySpecVersForIdAssociatedEntity;
    }
    
    public void setEntitySpecVersForIdAssociatedEntity(Set<EntitySpecVer> entitySpecVersForIdAssociatedEntity) {
        this.entitySpecVersForIdAssociatedEntity = entitySpecVersForIdAssociatedEntity;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="entitySpec")
    public Set<UploadedEntity> getUploadedEntities() {
        return this.uploadedEntities;
    }
    
    public void setUploadedEntities(Set<UploadedEntity> uploadedEntities) {
        this.uploadedEntities = uploadedEntities;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="entitySpec")
    public Set<ActiveEntity> getActiveEntities() {
        return this.activeEntities;
    }
    
    public void setActiveEntities(Set<ActiveEntity> activeEntities) {
        this.activeEntities = activeEntities;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="entitySpecByIdEntitySpec")
    public Set<EntitySpecVer> getEntitySpecVersForIdEntitySpec() {
        return this.entitySpecVersForIdEntitySpec;
    }
    
    public void setEntitySpecVersForIdEntitySpec(Set<EntitySpecVer> entitySpecVersForIdEntitySpec) {
        this.entitySpecVersForIdEntitySpec = entitySpecVersForIdEntitySpec;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="entitySpecByIdUpperBound")
    public Set<EntitySpecVer> getEntitySpecVersForIdUpperBound() {
        return this.entitySpecVersForIdUpperBound;
    }
    
    public void setEntitySpecVersForIdUpperBound(Set<EntitySpecVer> entitySpecVersForIdUpperBound) {
        this.entitySpecVersForIdUpperBound = entitySpecVersForIdUpperBound;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="entitySpecByIdLowerBound")
    public Set<EntitySpecVer> getEntitySpecVersForIdLowerBound() {
        return this.entitySpecVersForIdLowerBound;
    }
    
    public void setEntitySpecVersForIdLowerBound(Set<EntitySpecVer> entitySpecVersForIdLowerBound) {
        this.entitySpecVersForIdLowerBound = entitySpecVersForIdLowerBound;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="entitySpec")
    public Set<EntityValues> getEntityValueses() {
        return this.entityValueses;
    }
    
    public void setEntityValueses(Set<EntityValues> entityValueses) {
        this.entityValueses = entityValueses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="entitySpec")
    public Set<TermEntity> getTermEntities() {
        return this.termEntities;
    }
    
    public void setTermEntities(Set<TermEntity> termEntities) {
        this.termEntities = termEntities;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="entitySpec")
    public Set<Preference> getPreferences() {
        return this.preferences;
    }
    
    public void setPreferences(Set<Preference> preferences) {
        this.preferences = preferences;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="entitySpec")
    public Set<ParameterValuesView> getParameterValuesViews() {
        return this.parameterValuesViews;
    }
    
    public void setParameterValuesViews(Set<ParameterValuesView> parameterValuesViews) {
        this.parameterValuesViews = parameterValuesViews;
    }




}


